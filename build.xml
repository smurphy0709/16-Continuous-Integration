<?xml version="1.0"?>
<project name="Fibonacci" default="jar"
         xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- Project-specific configuration -->
  <loadproperties srcfile="project.properties"/>
  <property name="main.class" value="${package.main}.${ant.project.name}"/>
  <property name="base.name" value="${artifactId}-${version}"/>

  <!-- Standard Directory Layout -->
  <property name="src.dir" value="src"/>
  <property name="test.dir" value="test"/>
  <property name="build.dir" value="build"/>
  <property name="dist.dir" value="dist"/>
  <property name="JUNIT_HOME" value="C:/Program Files (x86)/Jenkins/workspace"/>
  <path id="JUnit 4.libraryclasspath">
	<pathelement location="${JUNIT_HOME}/junit.jar"/>
	<pathelement location="${JUNIT_HOME}/hamcrest-core.jar"/>
  </path>
  <path id="projectname.classpath">
	<pathelement location="bin"/>
  <path refid="JUnit 4.libraryclasspath"/>
  </path>
  <!-- Targets -->

  <target name="resolve" description="Retrieve dependencies with Ivy.">
    <ivy:resolve log="download-only"/>
    <ivy:cachepath conf="build" pathid="build.classpath"/>
    <ivy:cachepath conf="default" pathid="runtime.classpath"/>
    <ivy:cachefileset conf="default" setid="runtime.fileset"/>
    <ivy:cachepath conf="test" pathid="test.classpath"/>
    <ivy:cachepath conf="analysis" pathid="analysis.classpath"/>
  </target>

  <target name="compile" depends="resolve" description="Compile all sources.">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}/classes"
           optimize="on" debug="on" deprecation="on" includeantruntime="no">
      <compilerarg value="-Xlint"/>
      <classpath refid="build.classpath"/>
    </javac>
    <copy todir="${build.dir}/classes">
      <fileset dir="${src.dir}" excludes="**/*.java"/>
    </copy>
  </target>

  <target name="jar" depends="compile"
          description="Generate the jarfile distributable.">
    <jar destfile="${dist.dir}/${base.name}.jar"
         basedir="${build.dir}/classes">
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
    <jar destfile="${dist.dir}/${base.name}-all.jar"
         basedir="${build.dir}/classes">
      <zipgroupfileset refid="runtime.fileset"/>
      <manifest>
        <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
    </jar>
  </target>

  <target name="run" depends="compile" description="Run the application.">
    <java classname="${main.class}" classpath="${build.dir}/classes" fork="yes">
      <classpath refid="runtime.classpath"/>
      <arg value="--name"/>
      <arg value="Java"/>
    </java>
  </target>

  <target name="clean" description="Delete all generated files.">
    <delete dir="${build.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete file="cache.properties"/>
  </target>

  <target name="check" depends="resolve" description="Run Checkstyle.">
    <taskdef resource="checkstyletask.properties"
             classpathref="analysis.classpath"/>
    <checkstyle config="checkstyle.xml">
      <fileset dir="${src.dir}" includes="**/*.java"/>
      <classpath path="${build.dir}/classes"/>
    </checkstyle>
  </target>

  <target name="findbugs" depends="compile" description="Run FindBugs.">
    <taskdef classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
             name="findbugs" classpathref="analysis.classpath"/>
    <findbugs output="emacs" classpathref="analysis.classpath" pluginList="">
      <auxclasspath refid="analysis.classpath"/>
      <sourcepath path="${src.dir}"/>
      <class location="${build.dir}/classes"/>
    </findbugs>
  </target>
</project>